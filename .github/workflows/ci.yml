name: Flask API CI with Docker

on:
  release:
    types:
      - published
  
# env:
#   AWS_REGION: ap-south-1  
#   ECR_REPO: 992382813442.dkr.ecr.ap-south-1.amazonaws.com/python-app
#   IMAGE_TAGS: "prod1"
#   EC2_INSTANCE_IP: "3.110.84.75"  # Replace with your EC2 public IP
#   SSH_USER: "ubuntu" 
jobs:
  build-and-test:
    runs-on: ubuntu-24.04

    steps:
    # Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    # Set up Python (optional, for dependencies check)
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

  

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-1  
    

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build and Push Docker Image with Multiple Tags
      env:
          ECR_REPO:  992382813442.dkr.ecr.ap-south-1.amazonaws.com/python-app
          IMAGE_TAGS: "prod1" 
      run: |
          # # Build the Docker image
          # docker build -t python-app:latest .

          # # Loop through each tag and push the image
          # for TAG in $IMAGE_TAGS; do
          #   echo "Pushing image to $ECR_REPO:$TAG..."
          #   docker tag python-app:latest $ECR_REPO:$TAG-${{ github.event.release.tag_name }}
          #   docker push $ECR_REPO:$TAG-$IMAGE_TAGS{{ github.event.release.tag_name }}
          # done
             docker build -t python-app:latest .
             docker tag python-app:latest $ECR_REPO:$IMAGE_TAGS-${{ github.event.release.tag_name }}
             docker push $ECR_REPO:$IMAGE_TAGS-${{ github.event.release.tag_name }}
  deploy:
     name: Deploy to EC2
     needs: build-and-test
     runs-on: self-hosted

     steps:
      - name:  Deploy
        # uses: appleboy/ssh-action@v0.1.10
        # with:
        #   host: ${{ secrets.EC2_INSTANCE_IP }}
        #   username: ${{ secrets.SSH_USER }}
        #   key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          # script: |
          #   sudo apt-get update && sudo apt-get install -y awscli
          #   aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO }}
          #   docker stop flask-api || true
          #   docker rm flask-api || true
        
        run:    aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ env.ECR_REPO }}
               docker pull ${{ env.ECR_REPO }}:${{ env.IMAGE_TAGS }}-${{ github.event.release.tag_name }}
      - name: run image
        run: docker run  --name flask-api -d-p 5000:5000 ${{ env.ECR_REPO }}:${{ env.IMAGE_TAGS }}-${{ github.event.release.tag_name }}
          
     
