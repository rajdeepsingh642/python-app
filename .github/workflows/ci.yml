name: Flask API CI with Docker

on:
  release:
    types:
      - published

jobs:
  build-and-test:
    runs-on: ubuntu-24.04

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.9"

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Configure Docker Hub Credentials
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    - name: Install Docker Compose
      run: |
        sudo curl -L "https://github.com/docker/compose/releases/download/$(curl -s https://api.github.com/repos/docker/compose/releases/latest | jq -r .tag_name)/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
        sudo chmod +x /usr/local/bin/docker-compose
        docker-compose --version  # Verify installation
    - name: Build and Push Docker Image with Release Tag
      env:
          DOCKER_REPO: ${{ secrets.DOCKER_USERNAME }}/python-app
          IMAGE_TAG: ${{ github.event.release.tag_name }}
      run: |
          # Build the Docker image
          docker-compose build
        
          # Tag the image with the release tag
          docker tag ${DOCKER_REPO}:${IMAGE_TAG} $DOCKER_REPO:$IMAGE_TAG
          
          # Push the image to Docker Hub
          docker push $DOCKER_REPO:$IMAGE_TAG



  deploy:
    name: Deploy to EC2
    needs: build-and-test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Pull Docker Image from Docker Hub
        run: |
          docker pull ${{ secrets.DOCKER_USERNAME }}/python-app:${{ github.event.release.tag_name }}

      - name: Setup SSH Key
        run: |
          echo "${{ secrets.EC2_SSH_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem

      - name: Copy Docker Compose File to EC2
        run: |
          scp -i private_key.pem docker-compose.yml -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ec2-user/

      - name: SSH into EC2 & Deploy
        run: |
            ssh -i private_key.pem ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_PASSWORD }}"
            docker pull ${{ secrets.DOCKER_USERNAME }}/python-app:${{ github.event.release.tag_name }}
            
            docker stop flask-api || echo "No running container found"
            docker rm flask-api || echo "No container found to remove"

            echo "DOCKER_REPO=${{ secrets.DOCKER_USERNAME }}/python-app" > .env
            echo "IMAGE_TAG=${{ github.event.release.tag_name }}" >> .env

            docker-compose --env-file .env up -d
          EOF

     
